plugins {
    id "com.github.johnrengelman.shadow" version "5.0.0"
    id "application"
    id "org.jetbrains.kotlin.jvm" version "1.3.50"
    id "org.jetbrains.kotlin.kapt" version "1.3.50"
    id "org.jetbrains.kotlin.plugin.allopen" version "1.3.50"
}


version "0.1"
group "queue.starter"

repositories {
    mavenCentral()
    maven { url "https://jcenter.bintray.com" }
    mavenLocal()
}

configurations {
    // for dependencies that are needed for development only
    developmentOnly
}

dependencies {
    implementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    compileOnly platform("io.micronaut:micronaut-bom:$micronautVersion")
    annotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
    testAnnotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
    kapt platform("io.micronaut:micronaut-bom:$micronautVersion")
    kapt("io.micronaut:micronaut-inject-java")
    kapt("io.micronaut:micronaut-validation")
    kapt("io.micronaut:micronaut-graal")
    kapt("io.micronaut.data:micronaut-data-processor:$micronautDataVersion")
    kaptTest("io.micronaut:micronaut-inject-java")
    implementation "io.micronaut:micronaut-inject"
    kapt "io.micronaut:micronaut-inject"
    compile 'org.flowable:flowable-engine:6.4.2', {
//        exclude group: 'org.springframework', module: 'spring-beans'
//        exclude group: 'org.apache.commons', module: 'commons-email'
//        exclude group: 'org.slf4j', module: 'jcl-over-slf4j'
    }
    implementation "io.micronaut:micronaut-spring"
    compile 'org.postgresql:postgresql:42.2.8'
    compileOnly "com.oracle.substratevm:svm"
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion")
    implementation("org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion")
    implementation("io.micronaut:micronaut-runtime")
    implementation("io.micronaut:micronaut-http-server-netty")
    implementation("io.micronaut:micronaut-http-client")
    runtimeOnly("com.fasterxml.jackson.module:jackson-module-kotlin:2.9.9")
    implementation("jakarta.persistence:jakarta.persistence-api:2.2.2")
    implementation("io.micronaut.data:micronaut-data-jdbc:$micronautDataVersion")
    runtimeOnly("ch.qos.logback:logback-classic:1.2.3")
    runtimeOnly("io.micronaut.configuration:micronaut-jdbc-tomcat")
    testImplementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    testImplementation "io.micronaut.test:micronaut-test-kotlintest"
    testImplementation "io.mockk:mockk:1.9.3"
    testImplementation "io.kotlintest:kotlintest-runner-junit5:3.3.2"

    implementation "io.micronaut.data:micronaut-data-hibernate-jpa:$micronautDataVersion", {
        exclude group: 'io.micronaut.configuration', module: 'micronaut-hibernate-jpa'
    }
    compile "io.micronaut.configuration:micronaut-hibernate-jpa:1.2.1", {
        exclude group: 'io.micronaut.configuration', module: 'micronaut-hibernate-jpa-spring'
    }
}

test.classpath += configurations.developmentOnly

mainClassName = "queue.starter.Application"

shadowJar {
    mergeServiceFiles()
}

run.classpath += configurations.developmentOnly
run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote')

test {
    useJUnitPlatform()
}

allOpen {
    annotation("io.micronaut.aop.Around")
}

compileKotlin {
    kotlinOptions {
        jvmTarget = '1.8'
        //Will retain parameter names for Java reflection
        javaParameters = true
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = '1.8'
        javaParameters = true
    }
}
